{"version":3,"file":"static/js/671.28f873da.chunk.js","mappings":"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","sources":["components/Card.js","components/Loading.js","components/PageTitle.js","configs/chartjs.js","components/BarChart.js","components/Button.js","helpers/navigate.js","hooks/useFetchApi.js","services/getFetchApi.js","pages/AllCharacters.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Button } from \".\";\nimport { openExternalURL } from \"../helpers/navigate\";\nconst Card = ({ character, useLabel = \"Más\" }) => {\n  const goToMoreDetails = (url) => openExternalURL(url);\n  return (\n    <div className=\"col\" key={character.char_id}>\n      <div className=\"card\">\n        <div className=\"image-section\">\n          <img\n            src={character.img}\n            className=\"card-img-top\"\n            alt={character.name}\n          />\n          <span className=\"bottom-left\">{character.portrayed}</span>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{character.name}</h5>\n          {\n            (character.char_id === undefined) ?\n            (\n              <>\n              <p className=\"card-text truncate\">{character.description}</p>\n              \n              <Button\n                key={`Wiki_${character.id}`}\n                label={useLabel}\n                param={character.url}\n                action={goToMoreDetails}\n              />\n              </>\n            ): (\n              <>\n              <p className=\"card-text\">{character.occupation.join(\", \")}</p>\n              <p className=\"card-text\">\n                <small className=\"text-muted\">\n                  {useLabel} {character.appearance.join(\", \")}\n                </small>\n              </p>\n              </>\n            )\n          }\n          \n        </div>\n      </div>\n    </div>\n  )\n};\n\n// Para obligar pasar el argumento para el objeto\nCard.propTypes = {\n  character: PropTypes.object.isRequired,\n};\nexport default Card;\n","import { Ring } from \"react-awesome-spinners\";\n\nconst Loading = () => (\n  <span className=\"loading\">\n    <Ring size={454} />\n  </span>\n);\n\nexport default Loading;\n","const PageTitle = ({ title }) => (\n  <>\n    <h2>{title}</h2>\n    <hr />\n  </>\n);\n\nexport default PageTitle;\n","import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from \"chart.js\";\n  \n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n\n  export default ChartJS;","import { Bar } from \"react-chartjs-2\";\n// Configuración de los elemmentos como tooltip. labels,...que usaremos en las gráficas\n// eslint-disable-next-line no-unused-vars\nimport ChartJS from \"./../configs/chartjs\";\n\nconst BarChart = ({ titleChart, labels, dataValues }) => {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: titleChart,\n      },\n    },\n  };\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Characters\",\n        data: dataValues,\n        backgroundColor: \"rgba(13, 202, 240, 1)\",\n      },\n    ],\n  };\n  return <Bar options={options} data={data} />;\n};\n\nexport default BarChart;\n","import \"./../styles/components.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ label, param, action }) => {\n  return (\n    <>\n      <button className=\"btn btn-info btn-lg btn-block custom-button\"\n        onClick={() => action(param)}>\n        {label}\n      </button>\n    </>\n  );\n};\n\n// Para obligar pasar el argumento para el objeto\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","/**\n * Use to navigate to selec page and params\n * Reference cheatsheet\n * https://www.samanthaming.com/tidbits/86-window-location-cheatsheet/\n * @param {*} path \n * @param {*} params \n */\n export const navigateTo = (path, params) => {\n     if (params) {\n        window.location.href = window.location.origin.concat(`/breaking-bad-app/${path}/${params}`);\n        return;\n     }\n     window.location.href = window.location.origin.concat(`/breaking-bad-app/${path}`);\n   \n  };\n\nexport const openExternalURL = (url) => window.open(url, '_blank');","import { useEffect, useState, useRef } from \"react\";\nimport { fetchRestApi } from \"../services/getFetchApi\";\n\nexport const useFetchApi = (url) => {\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchRestApi(url).then((result) => {\n      if (isMounted.current) {\n        setState({\n          loading: false,\n          error: null,\n          data: result.data,\n        });\n      } else {\n        console.log(\"Ha dejado de renderizar\");\n      }\n    });\n  }, [url]);\n  return state;\n};\n","export const fetchRestApi = (url) => {\n  return fetch(url)\n    .then((resp) => resp.json())\n    .then((data) => {\n      return {\n        loading: false,\n        error: null,\n        data: data,\n      };\n    })\n    .catch((error) => {\n      return {\n        loading: false,\n        error,\n        data: [],\n      };\n    });\n};\n","import { useFetchApi } from \"../hooks/useFetchApi\";\nimport { API_URL_BASE, API_ENDPOINTS } from \"../helpers/urls\";\nimport Card from \"../components/Card\";\nimport Loading from \"../components/Loading\";\nimport PageTitle from \"../components/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nconst AllCharacters = () => {\n  const { t } = useTranslation();\n  const { loading, data } = useFetchApi(\n    `${API_URL_BASE}${API_ENDPOINTS.CHARACTERS}`\n  );\n  return (\n    <>\n      <PageTitle title={t(\"title.characters\")} />\n      {loading && <Loading />}\n      {!loading && (\n        <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n          {data.map((character, index) => (\n            <Card character={character} useLabel={t(\"pages.characters.appearance_seasons\")} key={index} />\n          ))}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default AllCharacters;\n"],"names":["character","useLabel","className","src","img","alt","name","portrayed","undefined","char_id","description","label","param","url","action","openExternalURL","id","occupation","join","appearance","size","title","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","display","text","titleChart","data","labels","datasets","dataValues","backgroundColor","onClick","window","open","useFetchApi","useState","loading","error","state","setState","isMounted","useRef","useEffect","current","fetch","then","resp","json","catch","fetchRestApi","result","console","log","t","useTranslation","API_URL_BASE","API_ENDPOINTS","map","index"],"sourceRoot":""}