{"version":3,"file":"static/js/6.62dd2c5d.chunk.js","mappings":"8IAQA,IANgB,kBACd,iBAAMA,UAAU,UAAhB,UACE,SAAC,KAAD,CAAMC,KAAM,U,iCCGhB,IAPkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,iCACE,wBAAKA,KACL,uB,sFCASC,EAAO,mCAAG,uHACdC,MAAK,WAAL,KAAeC,MAAK,SAACC,GAAD,OAASA,EAAIC,WADnB,2CAAH,sD,oGCiDpB,UA9CiB,WACf,IAAQC,GAAMC,EAAAA,EAAAA,GAAe,YAArBD,EACAE,GAASC,EAAAA,EAAAA,IAAO,GAAD,OAAIC,EAAAA,IAAJ,OAAmBC,EAAAA,GAAAA,UAA0BV,EAAAA,GAA5DO,KASR,OACE,iCACE,SAAC,IAAD,CAAWR,MAAOM,EAAE,YAClBE,IAAQ,SAAC,IAAD,IACTA,IACC,gBAAKV,UAAU,mBAAf,UACE,mBAAOA,UAAU,QAAjB,WACE,4BACE,wBAhBQ,CAAC,SAAD,iDAiBOc,KAAI,SAACC,GAAD,OACf,eAA8Bf,UAAU,cAAxC,SACGQ,EAAEO,IADIA,EAAMC,uBAOrB,2BACGN,EAAKI,KAAI,SAACG,EAASC,GAAV,OACR,2BACE,wBAAKD,EAAQE,UACb,wBAAKF,EAAQA,WACb,wBAAKA,EAAQf,SACb,wBAAKe,EAAQG,YACb,wBAAKH,EAAQI,WAAWC,KAAK,UALtBJ","sources":["components/Loading.js","components/PageTitle.js","helpers/fetcher.js","pages/Episodes.js"],"sourcesContent":["import { Ring } from \"react-awesome-spinners\";\n\nconst Loading = () => (\n  <span className=\"loading\">\n    <Ring size={454} />\n  </span>\n);\n\nexport default Loading;\n","const PageTitle = ({ title }) => (\n  <>\n    <h2>{title}</h2>\n    <hr />\n  </>\n);\n\nexport default PageTitle;\n","/**\n * Helper function to make ajax requests\n */\nexport const fetcher = async (...args) => {\n  return fetch(...args).then((res) => res.json());\n};\n","import { API_URL_BASE, API_ENDPOINTS } from \"./../helpers/urls\";\nimport Loading from \"../components/Loading\";\nimport PageTitle from \"../components/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nimport useSWR from \"swr\";\nimport { fetcher } from \"../helpers/fetcher\";\nconst Episodes = () => {\n  const { t } = useTranslation(\"episodes\");\n  const { data } = useSWR(`${API_URL_BASE}${API_ENDPOINTS.EPISODES}`, fetcher);\n  const tableValues = [\n    `season`,\n    `episode`,\n    `title_table`,\n    `air_date`,\n    `characters`,\n  ];\n\n  return (\n    <>\n      <PageTitle title={t(\"title\")} />\n      {!data && <Loading />}\n      {data && (\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {tableValues.map((value) => (\n                  <th key={value.toLowerCase()} className=\"text-center\">\n                    {t(value)}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n\n            <tbody>\n              {data.map((episode, index) => (\n                <tr key={index}>\n                  <td>{episode.season}</td>\n                  <td>{episode.episode}</td>\n                  <td>{episode.title}</td>\n                  <td>{episode.air_date}</td>\n                  <td>{episode.characters.join(\", \")}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Episodes;\n"],"names":["className","size","title","fetcher","fetch","then","res","json","t","useTranslation","data","useSWR","API_URL_BASE","API_ENDPOINTS","map","value","toLowerCase","episode","index","season","air_date","characters","join"],"sourceRoot":""}