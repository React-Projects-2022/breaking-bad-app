{"version":3,"file":"static/js/266.eecc782d.chunk.js","mappings":"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","sources":["components/Card.js","components/CharacterItemLoading.js","components/Loading.js","components/PageTitle.js","configs/chartjs.js","components/BarChart.js","components/Button.js","graphql/operations/query.js","helpers/navigate.js","pages/Home.js"],"sourcesContent":["import PropTypes from \"prop-types\";\nimport { Button } from \".\";\nimport { openExternalURL } from \"../helpers/navigate\";\nconst Card = ({ character, useLabel = \"Más\" }) => {\n  const goToMoreDetails = (url) => openExternalURL(url);\n  return (\n    <div className=\"col\" key={character.char_id}>\n      <div className=\"card\">\n        <div className=\"image-section\">\n          <img\n            src={character.img}\n            className=\"card-img-top\"\n            alt={character.name}\n          />\n          <span className=\"bottom-left\">{character.portrayed}</span>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{character.name}</h5>\n          {\n            (character.char_id === undefined) ?\n            (\n              <>\n              <p className=\"card-text truncate\">{character.description}</p>\n              \n              <Button\n                key={`Wiki_${character.id}`}\n                label={useLabel}\n                param={character.url}\n                action={goToMoreDetails}\n              />\n              </>\n            ): (\n              <>\n              <p className=\"card-text\">{character.occupation.join(\", \")}</p>\n              <p className=\"card-text\">\n                <small className=\"text-muted\">\n                  {useLabel} {character.appearance.join(\", \")}\n                </small>\n              </p>\n              </>\n            )\n          }\n          \n        </div>\n      </div>\n    </div>\n  )\n};\n\n// Para obligar pasar el argumento para el objeto\nCard.propTypes = {\n  character: PropTypes.object.isRequired,\n  useLabel: PropTypes.string\n};\nexport default Card;\n","import ContentLoader from \"react-content-loader\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Loading component for CharacterItem\n *\n * @param {*} props\n * @returns\n */\nconst CharacterItemLoading = (props) => (\n  <ContentLoader\n    speed={2}\n    width={350}\n    height={330}\n    viewBox=\"0 0 350 330\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"7\" y=\"7\" rx=\"5\" ry=\"5\" width=\"332\" height=\"227\" />\n    <rect x=\"11\" y=\"243\" rx=\"3\" ry=\"3\" width=\"139\" height=\"14\" />\n    <rect x=\"11\" y=\"268\" rx=\"3\" ry=\"3\" width=\"242\" height=\"11\" />\n    <rect x=\"11\" y=\"291\" rx=\"3\" ry=\"3\" width=\"87\" height=\"31\" />\n  </ContentLoader>\n);\n\nCharacterItemLoading.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default CharacterItemLoading;\n","import { Ring } from \"react-awesome-spinners\";\n\nconst Loading = () => (\n  <span className=\"loading\">\n    <Ring size={454} />\n  </span>\n);\n\nexport default Loading;\n","const PageTitle = ({ title }) => (\n  <>\n    <h2>{title}</h2>\n    <hr />\n  </>\n);\n\nexport default PageTitle;\n","import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from \"chart.js\";\n  \n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n\n  export default ChartJS;","import { Bar } from \"react-chartjs-2\";\n// Configuración de los elemmentos como tooltip. labels,...que usaremos en las gráficas\n// eslint-disable-next-line no-unused-vars\nimport ChartJS from \"./../configs/chartjs\";\n\nconst BarChart = ({ titleChart, labels, dataValues }) => {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: titleChart,\n      },\n    },\n  };\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Characters\",\n        data: dataValues,\n        backgroundColor: \"rgba(13, 202, 240, 1)\",\n      },\n    ],\n  };\n  return <Bar options={options} data={data} />;\n};\n\nexport default BarChart;\n","import \"./../styles/components.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({\n  label,\n  param,\n  action,\n  btnClass = \"btn btn-info btn-lg btn-block custom-button\",\n}) => {\n  return (\n    <>\n      <button className={btnClass} onClick={() => action(param)}>\n        {label}\n      </button>\n    </>\n  );\n};\n\n// Para obligar pasar el argumento para el objeto\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","import { gql } from \"@apollo/client\";\n\nexport const PRINCIPAL_CHARACTERS_VOTES = gql`\n  query PrincipalCharsVotes {\n    characters {\n      id\n      name\n      description\n      portrayed: actor\n      total_episodes\n      votes\n      url\n      img: photo\n    }\n  }\n`;\n\nexport const GET_CHARACTER = gql`\n  query detailsCharacter($id: ID!){\n    character(id: $id) {\n      id\n      total_episodes\n      votes\n      name\n      actor\n      description\n      photo\n      url\n    }\n  }\n`;\n","/**\n * Use to navigate to selec page and params\n * Reference cheatsheet\n * https://www.samanthaming.com/tidbits/86-window-location-cheatsheet/\n * @param {*} path \n * @param {*} params \n */\n export const navigateTo = (path, params) => {\n     if (params) {\n        window.location.href = window.location.origin.concat(`/breaking-bad-app/${path}/${params}`);\n        return;\n     }\n     window.location.href = window.location.origin.concat(`/breaking-bad-app/${path}`);\n   \n  };\n\nexport const openExternalURL = (url) => window.open(url, '_blank');","import { useQuery } from \"@apollo/client\";\nimport Card from \"../components/Card\";\nimport PageTitle from \"../components/PageTitle\";\nimport { PRINCIPAL_CHARACTERS_VOTES } from \"../graphql/operations/query\";\nimport \"./../configs/i18n\";\nimport { useTranslation } from \"react-i18next\";\nimport CharacterItemLoading from \"../components/CharacterItemLoading\";\n// import { useSetLanguage } from \"../hooks/useSetLanguage\";\nconst Home = () => {\n  const { t } = useTranslation(\"home\");\n  const { loading, error, data } = useQuery(PRINCIPAL_CHARACTERS_VOTES);\n  // const {lang } = useSetLanguage();\n  const characters = !!data && data.characters;\n  if (error) return <p>Error :(</p>;\n\n  return (\n    <>\n      <PageTitle title={t(\"title\")} />\n      <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n        {loading &&\n          [...Array(6)].map((_, i) => <CharacterItemLoading key={i} />)}\n        {!loading &&\n          characters.map((character, index) => (\n            <Card character={character} useLabel={t(\"more_info\")} key={index} />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["character","useLabel","className","src","img","alt","name","portrayed","undefined","char_id","description","label","param","url","action","openExternalURL","id","occupation","join","appearance","props","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","size","title","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","display","text","titleChart","data","labels","datasets","dataValues","btnClass","onClick","PRINCIPAL_CHARACTERS_VOTES","gql","GET_CHARACTER","window","open","t","useTranslation","useQuery","loading","error","characters","Array","map","_","i","index"],"sourceRoot":""}