{"version":3,"file":"static/js/6.203f9ed8.chunk.js","mappings":"wHAQA,IANgB,kBACd,iBAAMA,UAAU,UAAhB,UACE,SAAC,KAAD,CAAMC,KAAM,U,iCCGhB,IAPkB,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OAChB,iCACE,wBAAKA,KACL,uB,6ECASC,EAAc,SAACC,GAC1B,OAA0BC,EAAAA,EAAAA,UAAS,CACjCC,KAAM,KACNC,SAAS,EACTC,MAAO,OAHT,eAAOC,EAAP,KAAcC,EAAd,KAMMC,GAAYC,EAAAA,EAAAA,SAAO,GAqBzB,OAnBAC,EAAAA,EAAAA,YAAU,WACR,OAAO,WACLF,EAAUG,SAAU,KAErB,KAEHD,EAAAA,EAAAA,YAAU,YClBgB,SAACT,GAC3B,OAAOW,MAAMX,GACVY,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACV,GACL,MAAO,CACLC,SAAS,EACTC,MAAO,KACPF,KAAMA,MAGTa,OAAM,SAACX,GACN,MAAO,CACLD,SAAS,EACTC,MAAAA,EACAF,KAAM,QDKVc,CAAahB,GAAKY,MAAK,SAACK,GAClBV,EAAUG,QACZJ,EAAS,CACPH,SAAS,EACTC,MAAO,KACPF,KAAMe,EAAOf,OAGfgB,QAAQC,IAAI,gCAGf,CAACnB,IACGK,I,0FEiBT,UA3CiB,WACf,IAAQe,GAAMC,EAAAA,EAAAA,KAAND,EACR,GAA0BrB,EAAAA,EAAAA,GAAY,GAAD,OAChCuB,EAAAA,IADgC,OACjBC,EAAAA,GAAAA,WADZpB,EAAR,EAAQA,QAASD,EAAjB,EAAiBA,KAGXsB,EAAU,iBACVC,EAAc,CAAC,GAAD,OAAID,EAAJ,qBAAyBA,EAAzB,sBAA+CA,EAA/C,oBAAmEA,EAAnE,uBAA0FA,EAA1F,gBAEpB,OACE,iCACE,SAAC,IAAD,CAAW1B,MAAOsB,EAAE,oBACnBjB,IAAW,SAAC,IAAD,KACVA,IACA,gBAAKP,UAAU,mBAAf,UACE,mBAAOA,UAAU,QAAjB,WACE,4BACE,wBACG6B,EAAYC,KAAI,SAACC,GAAD,OACf,eAA8B/B,UAAU,cAAxC,SACGwB,EAAEO,IADIA,EAAMC,uBAOrB,2BACG1B,EAAKwB,KAAI,SAACG,EAASC,GAAV,OACR,2BACE,wBAAKD,EAAQE,UACb,wBAAKF,EAAQA,WACb,wBAAKA,EAAQ/B,SACb,wBAAK+B,EAAQG,YACb,wBAAKH,EAAQI,WAAWC,KAAK,UALtBJ","sources":["components/Loading.js","components/PageTitle.js","hooks/useFetchApi.js","services/getFetchApi.js","pages/Episodes.js"],"sourcesContent":["import { Ring } from \"react-awesome-spinners\";\n\nconst Loading = () => (\n  <span className=\"loading\">\n    <Ring size={454} />\n  </span>\n);\n\nexport default Loading;\n","const PageTitle = ({ title }) => (\n  <>\n    <h2>{title}</h2>\n    <hr />\n  </>\n);\n\nexport default PageTitle;\n","import { useEffect, useState, useRef } from \"react\";\nimport { fetchRestApi } from \"../services/getFetchApi\";\n\nexport const useFetchApi = (url) => {\n  const [state, setState] = useState({\n    data: null,\n    loading: true,\n    error: null,\n  });\n\n  const isMounted = useRef(true);\n\n  useEffect(() => {\n    return () => {\n      isMounted.current = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    fetchRestApi(url).then((result) => {\n      if (isMounted.current) {\n        setState({\n          loading: false,\n          error: null,\n          data: result.data,\n        });\n      } else {\n        console.log(\"Ha dejado de renderizar\");\n      }\n    });\n  }, [url]);\n  return state;\n};\n","export const fetchRestApi = (url) => {\n  return fetch(url)\n    .then((resp) => resp.json())\n    .then((data) => {\n      return {\n        loading: false,\n        error: null,\n        data: data,\n      };\n    })\n    .catch((error) => {\n      return {\n        loading: false,\n        error,\n        data: [],\n      };\n    });\n};\n","import { useFetchApi } from \"./../hooks/useFetchApi\";\nimport { API_URL_BASE, API_ENDPOINTS } from \"./../helpers/urls\";\nimport Loading from \"../components/Loading\";\nimport PageTitle from \"../components/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nconst Episodes = () => {\n  const { t } = useTranslation();\n  const { loading, data } = useFetchApi(\n    `${API_URL_BASE}${API_ENDPOINTS.EPISODES}`\n  );\n  const keyI18n = \"pages.episodes\"\n  const tableValues = [`${keyI18n}.season`, `${keyI18n}.episode`, `${keyI18n}.title`, `${keyI18n}.air_date`, `${keyI18n}.characters`];\n\n  return (\n    <>\n      <PageTitle title={t(\"title.episodes\")} />\n      {loading && <Loading />}\n      {!loading && (\n        <div className=\"table-responsive\">\n          <table className=\"table\">\n            <thead>\n              <tr>\n                {tableValues.map((value) => (\n                  <th key={value.toLowerCase()} className=\"text-center\">\n                    {t(value)}\n                  </th>\n                ))}\n              </tr>\n            </thead>\n\n            <tbody>\n              {data.map((episode, index) => (\n                <tr key={index}>\n                  <td>{episode.season}</td>\n                  <td>{episode.episode}</td>\n                  <td>{episode.title}</td>\n                  <td>{episode.air_date}</td>\n                  <td>{episode.characters.join(\", \")}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Episodes;\n"],"names":["className","size","title","useFetchApi","url","useState","data","loading","error","state","setState","isMounted","useRef","useEffect","current","fetch","then","resp","json","catch","fetchRestApi","result","console","log","t","useTranslation","API_URL_BASE","API_ENDPOINTS","keyI18n","tableValues","map","value","toLowerCase","episode","index","season","air_date","characters","join"],"sourceRoot":""}