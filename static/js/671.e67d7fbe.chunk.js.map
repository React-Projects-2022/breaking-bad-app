{"version":3,"file":"static/js/671.e67d7fbe.chunk.js","mappings":"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","sources":["hooks/useIntersection.js","components/ImageRenderer.js","components/Card.js","components/CharacterItemLoading.js","components/Loading.js","components/PageTitle.js","configs/chartjs.js","components/BarChart.js","components/Button.js","helpers/fetcher.js","helpers/navigate.js","pages/AllCharacters.js"],"sourcesContent":["import { useEffect } from \"react\";\n\nlet listenerCallbacks = new WeakMap();\n\nlet observer;\n\nconst handleIntersections = (entries) => {\n  entries.forEach((entry) => {\n    if (listenerCallbacks.has(entry.target)) {\n      let cb = listenerCallbacks.get(entry.target);\n\n      if (entry.isIntersecting || entry.intersectionRatio > 0) {\n        observer.unobserve(entry.target);\n        listenerCallbacks.delete(entry.target);\n        cb();\n      }\n    }\n  });\n};\n\nconst getIntersectionObserver = () => {\n  if (observer === undefined) {\n    observer = new IntersectionObserver(handleIntersections, {\n      rootMargin: \"100px\",\n      threshold: \"0.15\",\n    });\n  }\n  return observer;\n};\n\nexport const useIntersection = (element, callback) => {\n  useEffect(() => {\n    let target = element.current;\n    let observer = getIntersectionObserver();\n    listenerCallbacks.set(target, callback);\n    observer.observe(target);\n\n    return () => {\n      listenerCallbacks.delete(target);\n      observer.unobserve(target);\n    };\n  }, [callback, element]);\n};\n","import React, { useState, useRef } from \"react\";\nimport { useIntersection } from \"./../hooks/useIntersection\";\nimport \"./../styles/image-renderer.css\";\n\nconst ImageRenderer = ({ url, thumb, width, height, customClass = \"\", title = \"Element image\" }) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const imgRef = useRef();\n  useIntersection(imgRef, () => {\n    setIsInView(true);\n  });\n\n  const handleOnLoad = () => {\n    setIsLoaded(true);\n  };\n\n  return (\n    <div\n      className=\"image-container\"\n      ref={imgRef}\n      style={{\n        paddingBottom: `${(height / width) * 100}%`,\n        width: \"100%\",\n      }}\n    >\n      {isInView && (\n        <>\n          <img\n            className={`image thumb ${!!isLoaded ? \"isLoaded\" : \"\"} ${customClass}`}\n            src={thumb}\n            alt={title}\n          />\n          <img\n            className={`image ${!!isLoaded ? \"isLoaded\" : \"\"} ${customClass}`}\n            src={url}\n            onLoad={handleOnLoad}\n            alt={title}\n          />\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default ImageRenderer;\n","import PropTypes from \"prop-types\";\nimport { Button } from \".\";\nimport ImageRenderer from \"./ImageRenderer\";\nimport { openExternalURL } from \"../helpers/navigate\";\nconst Card = ({ character, useLabel = \"Más\" }) => {\n  const goToMoreDetails = (url) => openExternalURL(url);\n  return (\n    <div className=\"col\" key={character.char_id}>\n      <div className=\"card\">\n        <div className=\"image-section\">\n          <ImageRenderer\n            url={character.img}\n            thumb={character.img}\n            width={600}\n            height={470}\n            customClass={\"card-img-top\"}\n            title={character.name}\n          />\n          <span className=\"bottom-left\">{character.portrayed}</span>\n        </div>\n        <div className=\"card-body\">\n          <h5 className=\"card-title\">{character.name}</h5>\n          {\n            (character.char_id === undefined) ?\n            (\n              <>\n              <p className=\"card-text truncate\">{character.description}</p>\n              \n              <Button\n                key={`Wiki_${character.id}`}\n                label={useLabel}\n                param={character.url}\n                action={goToMoreDetails}\n              />\n              </>\n            ): (\n              <>\n              <p className=\"card-text\">{character.occupation.join(\", \")}</p>\n              <p className=\"card-text\">\n                <small className=\"text-muted\">\n                  {useLabel} {character.appearance.join(\", \")}\n                </small>\n              </p>\n              </>\n            )\n          }\n          \n        </div>\n      </div>\n    </div>\n  )\n};\n\n// Para obligar pasar el argumento para el objeto\nCard.propTypes = {\n  character: PropTypes.object.isRequired,\n  useLabel: PropTypes.string\n};\nexport default Card;\n","import ContentLoader from \"react-content-loader\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Loading component for CharacterItem\n *\n * @param {*} props\n * @returns\n */\nconst CharacterItemLoading = (props) => (\n  <ContentLoader\n    speed={2}\n    width={350}\n    height={330}\n    viewBox=\"0 0 350 330\"\n    backgroundColor=\"#f3f3f3\"\n    foregroundColor=\"#ecebeb\"\n    {...props}\n  >\n    <rect x=\"7\" y=\"7\" rx=\"5\" ry=\"5\" width=\"332\" height=\"227\" />\n    <rect x=\"11\" y=\"243\" rx=\"3\" ry=\"3\" width=\"139\" height=\"14\" />\n    <rect x=\"11\" y=\"268\" rx=\"3\" ry=\"3\" width=\"242\" height=\"11\" />\n    <rect x=\"11\" y=\"291\" rx=\"3\" ry=\"3\" width=\"87\" height=\"31\" />\n  </ContentLoader>\n);\n\nCharacterItemLoading.propTypes = {\n  width: PropTypes.number,\n  height: PropTypes.number,\n};\n\nexport default CharacterItemLoading;\n","import { Ring } from \"react-awesome-spinners\";\n\nconst Loading = () => (\n  <span className=\"loading\">\n    <Ring size={454} />\n  </span>\n);\n\nexport default Loading;\n","const PageTitle = ({ title }) => (\n  <>\n    <h2>{title}</h2>\n    <hr />\n  </>\n);\n\nexport default PageTitle;\n","import {\n    Chart as ChartJS,\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend,\n  } from \"chart.js\";\n  \n  ChartJS.register(\n    CategoryScale,\n    LinearScale,\n    BarElement,\n    Title,\n    Tooltip,\n    Legend\n  );\n\n  export default ChartJS;","import { Bar } from \"react-chartjs-2\";\n// Configuración de los elemmentos como tooltip. labels,...que usaremos en las gráficas\n// eslint-disable-next-line no-unused-vars\nimport ChartJS from \"./../configs/chartjs\";\n\nconst BarChart = ({ titleChart, labels, dataValues }) => {\n  const options = {\n    responsive: true,\n    plugins: {\n      legend: {\n        position: \"top\",\n      },\n      title: {\n        display: true,\n        text: titleChart,\n      },\n    },\n  };\n\n  const data = {\n    labels,\n    datasets: [\n      {\n        label: \"Characters\",\n        data: dataValues,\n        backgroundColor: \"rgba(13, 202, 240, 1)\",\n      },\n    ],\n  };\n  return <Bar options={options} data={data} />;\n};\n\nexport default BarChart;\n","import \"./../styles/components.css\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({\n  label,\n  param,\n  action,\n  btnClass = \"btn btn-info btn-lg btn-block custom-button\",\n}) => {\n  return (\n    <>\n      <button className={btnClass} onClick={() => action(param)}>\n        {label}\n      </button>\n    </>\n  );\n};\n\n// Para obligar pasar el argumento para el objeto\nButton.propTypes = {\n  label: PropTypes.string.isRequired,\n};\n\nexport default Button;\n","/**\n * Helper function to make ajax requests\n */\nexport const fetcher = async (...args) => {\n  return fetch(...args).then((res) => res.json());\n};\n","/**\n * Use to navigate to selec page and params\n * Reference cheatsheet\n * https://www.samanthaming.com/tidbits/86-window-location-cheatsheet/\n * @param {*} path \n * @param {*} params \n */\n export const navigateTo = (path, params) => {\n     if (params) {\n        window.location.href = window.location.origin.concat(`/breaking-bad-app/${path}/${params}`);\n        return;\n     }\n     window.location.href = window.location.origin.concat(`/breaking-bad-app/${path}`);\n   \n  };\n\nexport const openExternalURL = (url) => window.open(url, '_blank');","import Card from \"../components/Card\";\nimport { CharacterItemLoading } from \"../components\";\nimport PageTitle from \"../components/PageTitle\";\nimport { useTranslation } from \"react-i18next\";\nimport useSWR from \"swr\";\nimport { fetcher } from \"../helpers/fetcher\";\nimport { API_ENDPOINTS, API_URL_BASE } from \"../helpers/urls\";\nconst AllCharacters = () => {\n  const { t } = useTranslation(\"characters\");\n  const { data } = useSWR(\n    `${API_URL_BASE}${API_ENDPOINTS.CHARACTERS}`,\n    fetcher\n  );\n\n  return (\n    <>\n      <PageTitle title={t(\"title\")} />\n      <div className=\"row row-cols-1 row-cols-md-3 g-4\">\n        {!data &&\n          [...Array(6)].map((_, i) => <CharacterItemLoading key={i} />)}\n        {data &&\n          data.map((character, index) => (\n            <Card\n              character={character}\n              useLabel={t(\"appearance_seasons\")}\n              key={index}\n            />\n          ))}\n      </div>\n    </>\n  );\n};\n\nexport default AllCharacters;\n"],"names":["observer","listenerCallbacks","WeakMap","handleIntersections","entries","forEach","entry","has","target","cb","get","isIntersecting","intersectionRatio","unobserve","delete","getIntersectionObserver","undefined","IntersectionObserver","rootMargin","threshold","element","callback","url","thumb","width","height","customClass","title","useState","isLoaded","setIsLoaded","isInView","setIsInView","imgRef","useRef","useEffect","current","set","observe","className","ref","style","paddingBottom","src","alt","onLoad","character","useLabel","img","name","portrayed","char_id","description","label","param","action","openExternalURL","id","occupation","join","appearance","props","speed","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","size","ChartJS","CategoryScale","LinearScale","BarElement","Title","Tooltip","Legend","options","responsive","plugins","legend","position","display","text","titleChart","data","labels","datasets","dataValues","btnClass","onClick","fetcher","fetch","then","res","json","window","open","t","useTranslation","useSWR","API_URL_BASE","API_ENDPOINTS","Array","map","_","i","index"],"sourceRoot":""}